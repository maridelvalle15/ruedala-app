# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models
import cotizar.models
from django.conf import settings
import django.core.validators


class Migration(migrations.Migration):

    dependencies = [
        ('administrador', '0016_auto_20160725_1451'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Banco',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nombre', models.CharField(max_length=100)),
                ('direccion', models.CharField(max_length=100)),
                ('tlf', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(regex=b'^[a-zA-Z0-9]*$', message=b'Este campo es num\xc3\xa9rico. Introduzca un n\xc3\xbamero')])),
                ('persona_contacto', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(regex=b'^[a-z|A-Z|\\s]*$', message=b'Este campo es alfab\xc3\xa9tico. Introduzca una cadena de caracteres')])),
                ('email_contacto', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Comercio',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nombre', models.CharField(max_length=100)),
                ('razon', models.CharField(max_length=50, null=True, blank=True)),
                ('RUC', models.CharField(max_length=50)),
                ('telefono1', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(regex=b'^[0-9]*$', message=b'Este campo es num\xc3\xa9rico. Introduzca un n\xc3\xbamero')])),
                ('telefono2', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(regex=b'^[0-9]*$', message=b'Este campo es num\xc3\xa9rico. Introduzca un n\xc3\xbamero')])),
                ('direccion', models.CharField(max_length=100, null=True, blank=True)),
                ('email', models.EmailField(max_length=254)),
                ('nombre_rl', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(regex=b'^[a-z|A-Z|\\s]*$', message=b'Este campo es alfab\xc3\xa9tico. Introduzca una cadena de caracteres')])),
                ('apellido_rl', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(regex=b'^[a-z|A-Z|\\s]*$', message=b'Este campo es alfab\xc3\xa9tico. Introduzca una cadena de caracteres')])),
                ('cedula_rl', models.CharField(max_length=20)),
                ('telefono_rl', models.CharField(max_length=20)),
                ('email_rl', models.EmailField(max_length=254, null=True, blank=True)),
                ('nombre_extra', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(regex=b'^[a-z|A-Z|\\s]*$', message=b'Este campo es alfab\xc3\xa9tico. Introduzca una cadena de caracteres')])),
                ('telefono_extra', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(regex=b'^[0-9]*$', message=b'Este campo es num\xc3\xa9rico. Introduzca un n\xc3\xbamero')])),
                ('correo_extra', models.EmailField(max_length=254, null=True, blank=True)),
                ('programa_beneficios', models.CharField(blank=True, max_length=20, null=True, choices=[(b'Banco General', b'Banco General'), (b'Banesco', b'Banesco'), (b'Banistmo', b'Banistmo'), (b'Lafise', b'Lafise'), (b'Visa', b'Visa')])),
                ('beneficios', models.CharField(max_length=20, choices=[(b'7%', b'7%'), (b'10%', b'10%'), (b'20%', b'20%'), (b'30%', b'30%'), (b'50%', b'50%')])),
                ('disclaimer', models.TextField(max_length=200, null=True, blank=True)),
                ('disc_long', models.CharField(blank=True, max_length=20, null=True, choices=[(b'3 meses', b'3 meses'), (b'6 meses', b'6 meses')])),
                ('img_front', models.FileField(null=True, upload_to=b'cotizador_darien/static/comercios', blank=True)),
                ('img_inside', models.FileField(null=True, upload_to=b'cotizador_darien/static/comercios', blank=True)),
                ('latitud', models.FloatField(null=True, blank=True)),
                ('longitud', models.FloatField(null=True, blank=True)),
                ('desea_pos', models.CharField(blank=True, max_length=20, null=True, choices=[(b'Si', b'Si'), (b'No', b'No')])),
                ('modified_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('creacion', models.DateTimeField(null=True, blank=True)),
                ('deadline', cotizar.models.PositiveSmallIntegerField(null=True, blank=True)),
                ('status', models.CharField(max_length=30, null=True, blank=True)),
                ('fecha_recibido', models.DateTimeField(null=True, blank=True)),
                ('fecha_rechazado', models.DateTimeField(null=True, blank=True)),
                ('fecha_preaprobado', models.DateTimeField(null=True, blank=True)),
                ('fecha_visita', models.DateTimeField(null=True, blank=True)),
                ('fecha_docs', models.DateTimeField(null=True, blank=True)),
                ('fecha_aprobado', models.DateTimeField(null=True, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='ConductorVehiculo',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nombre', models.CharField(max_length=20)),
                ('apellido', models.CharField(max_length=20)),
                ('sexo', models.CharField(max_length=10, choices=[(b'Masculino', b'Masculino'), (b'Femenino', b'Femenino')])),
                ('identificacion', models.CharField(max_length=20)),
                ('estado_civil', models.CharField(max_length=10, choices=[(b'Soltero(a)', b'Soltero(a)'), (b'Casado(a)', b'Casado(a)'), (b'Otro', b'Otro')])),
                ('correo', models.EmailField(max_length=254)),
                ('telefono1', models.CharField(max_length=20)),
                ('telefono2', models.CharField(default=b'', max_length=20, blank=True)),
                ('historial_transito', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)])),
                ('edad', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(18)])),
                ('anio', cotizar.models.PositiveSmallIntegerField()),
                ('cero_km', models.BooleanField(default=False)),
                ('valor', models.PositiveIntegerField()),
                ('importacion_piezas', models.BooleanField(default=False)),
                ('lesiones_corporales', models.CharField(default=b'25,000.00/50,000.00', max_length=30, choices=[(b'5,000.00/10,000.00', b'5,000.00/10,000.00'), (b'10,000.00/20,000.00', b'10,000.00/20,000.00'), (b'20,000.00/40,000.00', b'20,000.00/40,000.00'), (b'25,000.00/50,000.00', b'25,000.00/50,000.00'), (b'50,000.00/100,000.00', b'50,000.00/100,000.00'), (b'100,000.00/300,000.00', b'100,000.00/300,000.00')])),
                ('danios_propiedad', models.CharField(default=b'50,000.00', max_length=30, choices=[(b'10,000.00', b'10,000.00'), (b'15,000.00', b'15,000.00'), (b'20,000.00', b'20,000.00'), (b'25,000.00', b'25,000.00'), (b'50,000.00', b'50,000.00'), (b'100,000.00', b'100,000.00')])),
                ('gastos_medicos', models.CharField(default=b'2,000.00/10,000.00', max_length=30, choices=[(b'500.00/2,500.00', b'500.00/2,500.00'), (b'1,000.00/5,000.00', b'1,000.00/5,000.00'), (b'2,000.00/10,000.00', b'2,000.00/10,000.00'), (b'5,000.00/25,000.00', b'5,000.00/25,000.00'), (b'5,000.00/35,000.00', b'5,000.00/35,000.00'), (b'10,000.00/50,000.00', b'10,000.00/50,000.00')])),
                ('muerte_accidental', models.CharField(default=b'5,000.00/25,000.00', max_length=30, choices=[(b'5,000.00/25,000.00', b'5,000.00/25,000.00')])),
                ('corredor', models.ForeignKey(to=settings.AUTH_USER_MODEL, null=True)),
                ('endoso', models.ForeignKey(to='administrador.Endoso')),
            ],
        ),
        migrations.CreateModel(
            name='Cotizacion',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('lesiones_corporales', models.CharField(default=b'25,000.00/50,000.00', max_length=30, choices=[(b'5,000.00/10,000.00', b'5,000.00/10,000.00'), (b'10,000.00/20,000.00', b'10,000.00/20,000.00'), (b'20,000.00/40,000.00', b'20,000.00/40,000.00'), (b'25,000.00/50,000.00', b'25,000.00/50,000.00'), (b'50,000.00/100,000.00', b'50,000.00/100,000.00'), (b'100,000.00/300,000.00', b'100,000.00/300,000.00')])),
                ('danios_propiedad', models.CharField(default=b'50,000.00', max_length=30, choices=[(b'10,000.00', b'10,000.00'), (b'15,000.00', b'15,000.00'), (b'20,000.00', b'20,000.00'), (b'25,000.00', b'25,000.00'), (b'50,000.00', b'50,000.00'), (b'100,000.00', b'100,000.00')])),
                ('gastos_medicos', models.CharField(default=b'2,000.00/10,000.00', max_length=30, choices=[(b'500.00/2,500.00', b'500.00/2,500.00'), (b'1,000.00/5,000.00', b'1,000.00/5,000.00'), (b'2,000.00/10,000.00', b'2,000.00/10,000.00'), (b'5,000.00/25,000.00', b'5,000.00/25,000.00'), (b'10,000.00/50,000.00', b'10,000.00/50,000.00'), (b'5,000.00/35,000.00', b'5,000.00/35,000.00')])),
                ('otros_danios', models.FloatField(default=0.0)),
                ('colision_vuelco', models.FloatField(default=0.0)),
                ('incendio_rayo', models.FloatField(default=0.0)),
                ('robo_hurto', models.FloatField(default=0.0)),
                ('muerte_accidental', models.CharField(default=b'5,000.00/25,000.00', max_length=30, choices=[(b'5,000.00/25,000.00', b'5,000.00/25,000.00')])),
                ('asistencia_legal', models.BooleanField(default=True)),
                ('importacion_piezas', models.BooleanField(default=False)),
                ('preferencial_plus', models.BooleanField(default=True)),
                ('prima_lesiones', models.FloatField(default=0.0)),
                ('prima_daniosProp', models.FloatField(default=0.0)),
                ('prima_gastosMedicos', models.FloatField(default=0.0)),
                ('prima_otrosDanios', models.FloatField(default=0.0)),
                ('prima_colisionVuelco', models.FloatField(default=0.0)),
                ('prima_preferencialPlus', models.FloatField(default=75.0)),
                ('subtotal', models.FloatField(default=0.0)),
                ('prima_mensual', models.FloatField(default=0.0)),
                ('prima_pagoContado', models.FloatField(default=0.0)),
                ('prima_pagoVisa', models.FloatField(default=0.0)),
                ('is_active', models.BooleanField(default=False)),
                ('descuento', models.FloatField(default=0.0)),
                ('total', models.FloatField(default=0.0)),
                ('impuestos', models.FloatField(default=0.0)),
                ('prima_importacion', models.FloatField(default=0.0)),
                ('plan', models.CharField(default=b'B\xc3\xa1sico', max_length=10)),
                ('cuota', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(10)])),
                ('prima_endoso', models.FloatField(default=0.0)),
                ('status', models.CharField(default=b'Enviada', max_length=30, choices=[(b'Enviada', b'Enviada'), (b'Guardada', b'Guardada'), (b'Aprobada', b'Aprobada'), (b'Rechazada', b'Rechazada')])),
                ('tipo_pago', models.CharField(default=b'Contado', max_length=30, choices=[(b'Contado', b'Contado'), (b'Visa', b'Visa'), (b'Otro', b'Otro')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now_add=True)),
                ('version', models.PositiveSmallIntegerField(default=1)),
                ('conductor', models.ForeignKey(to='cotizar.ConductorVehiculo')),
                ('corredor', models.ForeignKey(to=settings.AUTH_USER_MODEL)),
                ('endoso', models.ForeignKey(to='administrador.Endoso')),
            ],
        ),
        migrations.CreateModel(
            name='DocumentosComercio',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('doc', models.FileField(null=True, upload_to=b'', blank=True)),
                ('nombre', models.CharField(max_length=100, null=True, blank=True)),
                ('comercio', models.ForeignKey(blank=True, to='cotizar.Comercio', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Marca',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nombre', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Modelo',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nombre', models.CharField(max_length=35)),
                ('descuento', models.FloatField(default=1.0)),
                ('recargo', models.FloatField(default=1.0)),
                ('marca', models.ForeignKey(to='cotizar.Marca')),
            ],
        ),
        migrations.AddField(
            model_name='conductorvehiculo',
            name='marca',
            field=models.ForeignKey(to='cotizar.Marca'),
        ),
        migrations.AddField(
            model_name='conductorvehiculo',
            name='modelo',
            field=models.ForeignKey(to='cotizar.Modelo'),
        ),
    ]
